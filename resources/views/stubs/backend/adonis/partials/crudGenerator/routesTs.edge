@if(table.generateRoute)

Route.group(() => {
  @if(table.operationsMap.index))~
    @if (!table.singleton)
      Route.get('{{
        table.routeParentTables.length ? table.routeParentTables.map(
          parentTable => `/${parentTable.names.camelCase}/:${parentTable.names.camelCase}Id`
        ).join('') : ''
      }}/{{
        table.names.camelCase
      }}', 'API/{{ table.names.pascalCasePlural }}Controller.index')
    @endif
  @endif
  @if(table.operationsMap.store))
    Route.post('{{
      table.routeParentTables.length ? table.routeParentTables.map(
        parentTable => `/${parentTable.names.camelCase}/:${parentTable.names.camelCase}Id`
      ).join('') : ''
    }}/{{
      table.names.camelCase
    }}', 'API/{{ table.names.pascalCasePlural }}Controller.store')
  @endif
  @if(table.operationsMap.show))~
    @if (table.singleton)
      Route.get('{{
        table.routeParentTables.length ? table.routeParentTables.map(
          parentTable => `/${parentTable.names.camelCase}/:${parentTable.names.camelCase}Id`
        ).join('') : ''
      }}/{{
        table.names.camelCase
      }}', 'API/{{ table.names.pascalCasePlural }}Controller.show')
    @else
      Route.get('{{
        table.routeParentTables.length ? table.routeParentTables.map(
          parentTable => `/${parentTable.names.camelCase}/:${parentTable.names.camelCase}Id`
        ).join('') : ''
      }}/{{
        table.names.camelCase
      }}/:id', 'API/{{ table.names.pascalCasePlural }}Controller.show')
    @endif
  @endif
  @if(table.operationsMap.update))~
    @if(!table.singleton)
      Route.put('{{
        table.routeParentTables.length ? table.routeParentTables.map(
          parentTable => `/${parentTable.names.camelCase}/:${parentTable.names.camelCase}Id`
        ).join('') : ''
      }}/{{
        table.names.camelCase
      }}/:id', 'API/{{ table.names.pascalCasePlural }}Controller.update')
    @endif
  @endif
  @if(table.operationsMap.destroy))~
    @if(table.singleton)
      Route.delete('{{
        table.routeParentTables.length ? table.routeParentTables.map(
          parentTable => `/${parentTable.names.camelCase}/:${parentTable.names.camelCase}Id`
        ).join('') : ''
      }}/{{
        table.names.camelCase
      }}', 'API/{{ table.names.pascalCasePlural }}Controller.destroy')
    @else
      Route.delete('{{
        table.routeParentTables.length ? table.routeParentTables.map(
          parentTable => `/${parentTable.names.camelCase}/:${parentTable.names.camelCase}Id`
        ).join('') : ''
      }}/{{
        table.names.camelCase
      }}/:id', 'API/{{ table.names.pascalCasePlural }}Controller.destroy')
    @endif
  @endif
  @if(table.operationsMap.storeMany))
    Route.post('{{
      table.routeParentTables.length ? table.routeParentTables.map(
        parentTable => `/${parentTable.names.camelCase}/:${parentTable.names.camelCase}Id`
      ).join('') : ''
    }}/{{
      table.names.camelCase
    }}/store/many', 'API/{{ table.names.pascalCasePlural }}Controller.storeMany')
  @endif
  @if(table.operationsMap.destroyMany))
    Route.post('{{
      table.routeParentTables.length ? table.routeParentTables.map(
        parentTable => `/${parentTable.names.camelCase}/:${parentTable.names.camelCase}Id`
      ).join('') : ''
    }}/{{
      table.names.camelCase
    }}/destroy/many', 'API/{{ table.names.pascalCasePlural }}Controller.destroyMany')
  @endif
  @if(Array.isArray(table.relations) && table.relations.length)
    @each(relation in table.relations.filter((relation) => relation.type === 'manyToMany'))
      Route.post('{{
        table.routeParentTables.length ? table.routeParentTables.map(
          parentTable => `/${parentTable.names.camelCase}/:${parentTable.names.camelCase}Id`
        ).join('') : ''
      }}/:id/{{ table.names.camelCase }}/{{
        relation.modelNames.camelCase
      }}', 'API/{{ table.names.pascalCasePlural }}Controller.sync{{ relation.modelNames.pascalCase }}')
    @endeach
  @endif
})
.middleware(['auth'])
{{{ type === 'api' ? ".prefix('/api')" : '' }}}
@endif