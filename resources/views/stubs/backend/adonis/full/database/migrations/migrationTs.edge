import BaseSchema from '@ioc:Adonis/Lucid/Schema'

export default class {{ table.names.pascalCasePlural }}Schema extends BaseSchema {
  protected tableName = '{{ table.tableName }}'

  public async up () {
    this.schema.createTable(this.tableName, (table) => {
      table.increments('id').primary()
      @each(column in table.columns)
        @if(column.type === 'string')
          table.{{
            column.meta.multiline ? 'text': 'string'
          }}('{{ column.columnName }}'{{
            column.meta.dbLength ? `, ${column.meta.dbLength}` : column.meta.maxLength ? `, ${column.meta.maxLength}`: ''
          }})
        @elseif(column.type === 'integer')
          table.integer('{{ column.columnName }}')
        @elseif(column.type === 'decimal')
          table.double('{{ column.columnName }}')
        @elseif(column.type === 'date')
          table.date('{{ column.columnName }}')
        @elseif(column.type === 'boolean')
          table.boolean('{{ column.columnName }}')
        @endif
        {{
          column.meta.unique ? '.unique()': ''
        }}{{
          column.meta.required ? '.notNullable()': '.nullable()'
        }}{{{
          column.meta.defaultTo ? `.defaultTo('${column.meta.defaultTo}')`: ''
        }}}
      @endeach
      @if(table.timestamps)
        /**
        * Uses timestampz for PostgreSQL and DATETIME2 for MSSQL
        */
        table.timestamp('{{ input.camelCaseStrategy ? 'createdAt' : 'created_at' }}', { useTz: true }).notNullable()
        table.timestamp('{{ input.camelCaseStrategy ? 'updatedAt' : 'updated_at' }}', { useTz: true }).notNullable()
      @endif
    })
  }

  public async down () {
    this.schema.dropTable(this.tableName)
  }
}
