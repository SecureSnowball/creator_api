import User from 'App/Models/User'
import { schema, rules } from '@ioc:Adonis/Core/Validator'
import { HttpContextContract } from '@ioc:Adonis/Core/HttpContext'

export default class RegisterValidator {
  constructor (protected ctx: HttpContextContract) {}

  public schema = schema.create({
    email: schema.string({ trim: true }, [
      rules.email(),
      rules.maxLength({{ email.meta.maxLength || 256 }}),
      rules.unique({
        table: {{ table.names.pascalCase }}.table,
        column: 'email'
      }),
    ]),
    password: schema.string({ trim: true },
    [
      rules.maxLength({{ password.meta.maxLength || 72 }}),
      rules.confirmed('passwordConfirmation'),
    ]),
    @each(column in input.auth.table.columns.filter(
      c => c.meta.expose !== false && c.type !== 'File'
    ))
      @if(!['Email', 'Password', 'RememberMeToken'].includes(column.name))
      @!component(`stubs/backend/${
        input.tech.backend
      }/full/app/Validators/component/validationRulesForColumn`, {
        table,
        column,
        input
      })
      @endif
    @endeach
  })

  public messages = {}
}
