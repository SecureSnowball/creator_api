import {
  schema,
  {{-- Ensure at least one column is exposed and all columns are not files --}}
  @if(table.columns.find(c => c.meta.expose !== false) && table.columns.find(c => c.type !== 'File'))
    rules,
  @endif
} from '@ioc:Adonis/Core/Validator'
import { HttpContextContract } from '@ioc:Adonis/Core/HttpContext'

export default class {{
  action === 'store' ? 'Store' : 'Update'
}}{{ table.names.pascalCase }}Validator {
  constructor(protected ctx: HttpContextContract) {}

  public schema = schema.create({
    @each(column in table.columns.filter(c => c.meta.expose !== false))~
      @!component(`stubs/backend/${
        input.tech.backend
      }/full/app/Validators/component/validationRulesForColumn`, {
        table,
        column,
        input
      })~
    @endeach
    @each(relation in table.relations)~
      @!component(`stubs/backend/${
        input.tech.backend
      }/full/app/Validators/component/validationRulesForRelation`, {
        table,
        relation,
        input
      })~
    @endeach
  })
  public messages = {}
}
