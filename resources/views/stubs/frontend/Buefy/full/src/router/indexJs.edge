import Vue from 'vue';
import VueRouter from 'vue-router';
import store from '../store';

import HomeView from '../views/HomeView.vue';

Vue.use(VueRouter);

const routes = [
  {
    path: '/',
    name: 'HomePage',
    component: HomeView,
  },
  {
    path: '/login',
    name: 'LoginPage',
    component: () => import('../views/LoginView.vue'),
    meta: {
      guest: true,
    },
  },
  @if(input.auth.register)
    {
      path: '/register',
      name: 'RegisterPage',
      component: () => import('../views/RegisterView.vue'),
      meta: {
        guest: true,
      },
    },
  @endif
  @if(input.auth.passwordReset)
    {
      path: "/forgot_password/request",
      name: "ForgotPasswordRequestPage",
      component: () => import("../views/ForgotPasswordRequestView.vue"),
      meta: {
        guest: true,
      },
    },
    {
      path: "/forgot_password/verify",
      name: "ForgotPasswordVerifyPage",
      component: () => import("../views/ForgotPasswordUpdateView.vue"),
      meta: {
        guest: true,
      },
    },
    {
      path: "/email/verify",
      name: "VerifyEmailPage",
      component: () => import("../views/VerifyEmailPage.vue"),
    },
    {
      path: "/emailUpdate",
      name: "UpdateEmailPage",
      component: () =>
        import(/* webpackChunkName: "updateEmailView" */ "../views/UpdateEmailView.vue"),
    },
    {
      path: "/email/verificationPending",
      name: "EmailVerificationPendingPage",
      component: () => import("../views/EmailVerificationPendingView.vue"),
      meta: {
        auth: true,
        emailUnverified: true,
      },
    },
  @endif
  @if(input.rbac.enabled)
    {
      path: "/rbacMatrix",
      name: "RbacMatrixPage",
      component: () => import("../views/RbacMatrixView.vue"),
      meta: {
        auth: true,
        ensureEmailIsVerified: true,
      },
    },
  @endif
  {
    path: "/setting",
    name: "SettingPage",
    component: () => import("../views/SettingView.vue"),
    meta: {
      auth: true,
      @if(input.mailEnabled)
        ensureEmailIsVerified: true,
      @endif
    },
  },
  {
    path: '/dashboard',
    name: 'DashboardPage',
    component: () => import('../views/DashboardView.vue'),
    meta: {
      auth: true,
      ensureEmailIsVerified: true,
    },
  },
  {{--  Generate routes for each model  --}}
  @each(table in input.tables.concat([input.auth.table]))~
    @!component(`stubs/frontend/${input.tech.frontend}/partial/crudGenerator/routerJs`, {
      table,
      input,
    })~
  @endeach
];

const router = new VueRouter({
  mode: 'history',
  base: process.env.BASE_URL,
  routes,
});

router.beforeEach((to, from, next) => {
  if (!to.meta) {
    return next();
  }

  const { meta } = to;
  if (meta.guest) {
    if (store.state.auth.token) {
      return next({
        name: 'DashboardPage',
      });
    }
  }

  if (meta.auth) {
    if (!store.state.auth.token) {
      return next({
        name: 'LoginPage',
      });
    }
  }

  @if(input.mailEnabled)
  /**
   * Redirect users to dashboard when email verified but tries to access verification page
   */
  if (meta.emailUnverified) {
    if (store.state.auth.user && store.state.auth.user.emailVerifiedAt) {
      return next({
        name: "DashboardPage",
      });
    }
  }

  if (meta.ensureEmailIsVerified) {
    if (!store.state.auth.user.emailVerifiedAt) {
      return next({
        name: "EmailVerificationPendingPage",
      });
    }
  }
  @endif

  return next();
});

export default router;
